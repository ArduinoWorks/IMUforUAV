<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Static Call Graph - [..\OBJ\Template.axf]</title>
</head>

<body>
  <hr />

  <h1>Static Call Graph for image ..\OBJ\Template.axf</h1>
  <hr />
  <br />

  <p>#&#060;CALLGRAPH&#062;# ARM Linker, 5040049: Last Updated: Sat Dec 05 16:52:24 2015<br /></p>

  <h3>Maximum Stack Usage = 464 bytes + Unknown(Cycles, Untraceable Function Pointers)</h3>

  <h3>Call chain for Maximum Stack Depth:</h3>main &rArr; Initialize_Q &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round

  <h3>Mutually Recursive functions</h3>

  <ul>
    <li><a href="#[1d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_IRQHandler</a><br /></li>
  </ul>

  <h3>Function Pointers</h3>

  <ul>
    <li><a href="#[1d]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[5]">BusFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[1f]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[20]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[21]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[1e]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[4b]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[4c]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[4d]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[4a]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[5a]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[59]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[16]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[17]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[18]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[19]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[1a]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[1b]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[1c]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[3a]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[43]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[44]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[45]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[46]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[47]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[4f]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[50]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[51]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[8]">DebugMon_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[48]">ETH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[49]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[11]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[33]">EXTI15_10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[12]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[13]">EXTI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[14]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[15]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[22]">EXTI9_5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[f]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[5c]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[3b]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[5b]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[3]">HardFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[2b]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[2a]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[2d]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[2c]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[54]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[53]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[4]">MemManage_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[2]">NMI_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[4e]">OTG_FS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[35]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[56]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[55]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[58]">OTG_HS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[57]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[c]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[9]">PendSV_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[10]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[34]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[e]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[1]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[3c]">SDIO_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[2e]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[2f]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[3e]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[7]">SVC_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[a]">SysTick_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[5e]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f40_41xxx.o(.text)</li>

    <li><a href="#[d]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[23]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[26]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[25]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[24]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[27]">TIM2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[28]">TIM3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[29]">TIM4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[3d]">TIM5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[41]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[42]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[36]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[39]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[38]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[37]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[3f]">UART4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[40]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[30]">USART1_IRQHandler</a> from usart.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[31]">USART2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[32]">USART3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[52]">USART6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[6]">UsageFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)</li>

    <li><a href="#[5f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)</li>

    <li><a href="#[60]">fputc</a> from usart.o(.text) referenced from printfa.o(i.__0printf)</li>

    <li><a href="#[5d]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)</li>
  </ul>

  <h3>Global Symbols</h3>

  <p><strong><a name="[5f]"></a>__main</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(.text)</li>
  </ul>

  <p><strong><a name="[df]"></a>_main_stk</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))</p>

  <p><strong><a name="[61]"></a>_main_scatterload</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload</li>
  </ul>

  <p><strong><a name="[ca]"></a>__main_after_scatterload</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload</li>
  </ul>

  <p><strong><a name="[e0]"></a>_main_clock</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))</p>

  <p><strong><a name="[e1]"></a>_main_cpp_init</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))</p>

  <p><strong><a name="[e2]"></a>_main_init</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))</p>

  <p><strong><a name="[e3]"></a>__rt_final_cpp</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))</p>

  <p><strong><a name="[e4]"></a>__rt_final_exit</strong> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))</p>

  <p><strong><a name="[68]"></a>Initial_System_Timer</strong> (Thumb, 66 bytes, Stack size 0 bytes, main.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[5d]"></a>main</strong> (Thumb, 160 bytes, Stack size 56 bytes, main.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 464</li>

    <li>Call Chain = main &rArr; Initialize_Q &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>

    <li><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms</li>

    <li><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init</li>

    <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d</li>

    <li><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig</li>

    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_init</li>

    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>

    <li><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init</li>

    <li><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_System_Timer</li>

    <li><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf</li>
  </ul><br />
  [Address Reference Count : 1]

  <ul>
    <li>entry9a.o(.ARM.Collect$$$$0000000B)</li>
  </ul>

  <p><strong><a name="[2]"></a>NMI_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[3]"></a>HardFault_Handler</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[4]"></a>MemManage_Handler</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[5]"></a>BusFault_Handler</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[6]"></a>UsageFault_Handler</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[7]"></a>SVC_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[8]"></a>DebugMon_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[9]"></a>PendSV_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[a]"></a>SysTick_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[5e]"></a>SystemInit</strong> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 20</li>

    <li>Call Chain = SystemInit &rArr; SetSysClock</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock</li>
  </ul><br />
  [Address Reference Count : 1]

  <ul>
    <li>startup_stm32f40_41xxx.o(.text)</li>
  </ul>

  <p><strong><a name="[e5]"></a>SystemCoreClockUpdate</strong> (Thumb, 174 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text), UNUSED)</p>

  <p><strong><a name="[1]"></a>Reset_Handler</strong> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[1d]"></a>ADC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler</li>
  </ul><br />
  [Address Reference Count : 1]

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[1f]"></a>CAN1_RX0_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[20]"></a>CAN1_RX1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[21]"></a>CAN1_SCE_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[1e]"></a>CAN1_TX_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[4b]"></a>CAN2_RX0_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[4c]"></a>CAN2_RX1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[4d]"></a>CAN2_SCE_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[4a]"></a>CAN2_TX_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[5a]"></a>CRYP_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[59]"></a>DCMI_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[16]"></a>DMA1_Stream0_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[17]"></a>DMA1_Stream1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[18]"></a>DMA1_Stream2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[19]"></a>DMA1_Stream3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[1a]"></a>DMA1_Stream4_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[1b]"></a>DMA1_Stream5_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[1c]"></a>DMA1_Stream6_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[3a]"></a>DMA1_Stream7_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[43]"></a>DMA2_Stream0_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[44]"></a>DMA2_Stream1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[45]"></a>DMA2_Stream2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[46]"></a>DMA2_Stream3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[47]"></a>DMA2_Stream4_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[4f]"></a>DMA2_Stream5_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[50]"></a>DMA2_Stream6_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[51]"></a>DMA2_Stream7_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[48]"></a>ETH_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[49]"></a>ETH_WKUP_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[11]"></a>EXTI0_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[33]"></a>EXTI15_10_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[12]"></a>EXTI1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[13]"></a>EXTI2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[14]"></a>EXTI3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[15]"></a>EXTI4_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[22]"></a>EXTI9_5_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[f]"></a>FLASH_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[5c]"></a>FPU_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[3b]"></a>FSMC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[5b]"></a>HASH_RNG_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[2b]"></a>I2C1_ER_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[2a]"></a>I2C1_EV_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[2d]"></a>I2C2_ER_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[2c]"></a>I2C2_EV_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[54]"></a>I2C3_ER_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[53]"></a>I2C3_EV_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[4e]"></a>OTG_FS_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[35]"></a>OTG_FS_WKUP_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[56]"></a>OTG_HS_EP1_IN_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[55]"></a>OTG_HS_EP1_OUT_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[58]"></a>OTG_HS_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[57]"></a>OTG_HS_WKUP_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[c]"></a>PVD_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[10]"></a>RCC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[34]"></a>RTC_Alarm_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[e]"></a>RTC_WKUP_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[3c]"></a>SDIO_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[2e]"></a>SPI1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[2f]"></a>SPI2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[3e]"></a>SPI3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[d]"></a>TAMP_STAMP_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[23]"></a>TIM1_BRK_TIM9_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[26]"></a>TIM1_CC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[25]"></a>TIM1_TRG_COM_TIM11_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[24]"></a>TIM1_UP_TIM10_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[27]"></a>TIM2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[28]"></a>TIM3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[29]"></a>TIM4_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[3d]"></a>TIM5_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[41]"></a>TIM6_DAC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[42]"></a>TIM7_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[36]"></a>TIM8_BRK_TIM12_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[39]"></a>TIM8_CC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[38]"></a>TIM8_TRG_COM_TIM14_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[37]"></a>TIM8_UP_TIM13_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[3f]"></a>UART4_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[40]"></a>UART5_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[31]"></a>USART2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[32]"></a>USART3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[52]"></a>USART6_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[b]"></a>WWDG_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[63]"></a>NVIC_PriorityGroupConfig</strong> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[81]"></a>NVIC_Init</strong> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 16</li>

    <li>Call Chain = NVIC_Init</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>
  </ul>

  <p><strong><a name="[e6]"></a>NVIC_SetVectorTable</strong> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)</p>

  <p><strong><a name="[e7]"></a>NVIC_SystemLPConfig</strong> (Thumb, 34 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)</p>

  <p><strong><a name="[78]"></a>SysTick_CLKSourceConfig</strong> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init</li>
  </ul>

  <p><strong><a name="[6f]"></a>GPIO_DeInit</strong> (Thumb, 268 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd</li>
  </ul>

  <p><strong><a name="[7d]"></a>GPIO_Init</strong> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 20</li>

    <li>Call Chain = GPIO_Init</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>

    <li><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init</li>

    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>

    <li><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_init</li>
  </ul>

  <p><strong><a name="[e8]"></a>GPIO_StructInit</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[e9]"></a>GPIO_PinLockConfig</strong> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[85]"></a>GPIO_ReadInputDataBit</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_is_DRY</li>

    <li><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5883_IS_newdata</li>
  </ul>

  <p><strong><a name="[ea]"></a>GPIO_ReadInputData</strong> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[eb]"></a>GPIO_ReadOutputDataBit</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[ec]"></a>GPIO_ReadOutputData</strong> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[ed]"></a>GPIO_SetBits</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[ee]"></a>GPIO_ResetBits</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[ef]"></a>GPIO_WriteBit</strong> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[f0]"></a>GPIO_Write</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[f1]"></a>GPIO_ToggleBits</strong> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)</p>

  <p><strong><a name="[7c]"></a>GPIO_PinAFConfig</strong> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 20</li>

    <li>Call Chain = GPIO_PinAFConfig</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>
  </ul>

  <p><strong><a name="[f2]"></a>RCC_DeInit</strong> (Thumb, 82 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[f3]"></a>RCC_HSEConfig</strong> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[72]"></a>RCC_GetFlagStatus</strong> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp</li>
  </ul>

  <p><strong><a name="[71]"></a>RCC_WaitForHSEStartUp</strong> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus</li>
  </ul>

  <p><strong><a name="[f4]"></a>RCC_AdjustHSICalibrationValue</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[f5]"></a>RCC_HSICmd</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[f6]"></a>RCC_LSEConfig</strong> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[f7]"></a>RCC_LSICmd</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[f8]"></a>RCC_PLLConfig</strong> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[f9]"></a>RCC_PLLCmd</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[fa]"></a>RCC_PLLI2SConfig</strong> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[fb]"></a>RCC_PLLI2SCmd</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[fc]"></a>RCC_PLLSAIConfig</strong> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[fd]"></a>RCC_PLLSAICmd</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[fe]"></a>RCC_ClockSecuritySystemCmd</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[ff]"></a>RCC_MCO1Config</strong> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[100]"></a>RCC_MCO2Config</strong> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[101]"></a>RCC_SYSCLKConfig</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[102]"></a>RCC_GetSYSCLKSource</strong> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[103]"></a>RCC_HCLKConfig</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[104]"></a>RCC_PCLK1Config</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[105]"></a>RCC_PCLK2Config</strong> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[77]"></a>RCC_GetClocksFreq</strong> (Thumb, 222 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 20</li>

    <li>Call Chain = RCC_GetClocksFreq</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init</li>
  </ul>

  <p><strong><a name="[106]"></a>RCC_RTCCLKConfig</strong> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[107]"></a>RCC_RTCCLKCmd</strong> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[108]"></a>RCC_BackupResetCmd</strong> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[109]"></a>RCC_I2SCLKConfig</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[10a]"></a>RCC_SAIPLLI2SClkDivConfig</strong> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[10b]"></a>RCC_SAIPLLSAIClkDivConfig</strong> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[10c]"></a>RCC_SAIBlockACLKConfig</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[10d]"></a>RCC_SAIBlockBCLKConfig</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[10e]"></a>RCC_LTDCCLKDivConfig</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[10f]"></a>RCC_TIMCLKPresConfig</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[7a]"></a>RCC_AHB1PeriphClockCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>

    <li><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init</li>

    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>

    <li><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_init</li>
  </ul>

  <p><strong><a name="[110]"></a>RCC_AHB2PeriphClockCmd</strong> (Thumb, 78 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[111]"></a>RCC_AHB3PeriphClockCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[112]"></a>RCC_APB1PeriphClockCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[7b]"></a>RCC_APB2PeriphClockCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>
  </ul>

  <p><strong><a name="[70]"></a>RCC_AHB1PeriphResetCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit</li>
  </ul>

  <p><strong><a name="[113]"></a>RCC_AHB2PeriphResetCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[114]"></a>RCC_AHB3PeriphResetCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[75]"></a>RCC_APB1PeriphResetCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit</li>
  </ul>

  <p><strong><a name="[74]"></a>RCC_APB2PeriphResetCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit</li>
  </ul>

  <p><strong><a name="[115]"></a>RCC_AHB1PeriphClockLPModeCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[116]"></a>RCC_AHB2PeriphClockLPModeCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[117]"></a>RCC_AHB3PeriphClockLPModeCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[118]"></a>RCC_APB1PeriphClockLPModeCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[119]"></a>RCC_APB2PeriphClockLPModeCmd</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[11a]"></a>RCC_LSEModeConfig</strong> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[11b]"></a>RCC_ITConfig</strong> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[11c]"></a>RCC_ClearFlag</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[11d]"></a>RCC_GetITStatus</strong> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[11e]"></a>RCC_ClearITPendingBit</strong> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)</p>

  <p><strong><a name="[73]"></a>USART_DeInit</strong> (Thumb, 206 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd</li>

    <li><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd</li>
  </ul>

  <p><strong><a name="[76]"></a>USART_Init</strong> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 68</li>

    <li>Call Chain = USART_Init &rArr; RCC_GetClocksFreq</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>
  </ul>

  <p><strong><a name="[11f]"></a>USART_StructInit</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[120]"></a>USART_ClockInit</strong> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[121]"></a>USART_ClockStructInit</strong> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[7e]"></a>USART_Cmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>
  </ul>

  <p><strong><a name="[122]"></a>USART_SetPrescaler</strong> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[123]"></a>USART_OverSampling8Cmd</strong> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[124]"></a>USART_OneBitMethodCmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[125]"></a>USART_SendData</strong> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[83]"></a>USART_ReceiveData</strong> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler</li>
  </ul>

  <p><strong><a name="[126]"></a>USART_SetAddress</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[127]"></a>USART_ReceiverWakeUpCmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[128]"></a>USART_WakeUpConfig</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[129]"></a>USART_LINBreakDetectLengthConfig</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[12a]"></a>USART_LINCmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[12b]"></a>USART_SendBreak</strong> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[12c]"></a>USART_HalfDuplexCmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[12d]"></a>USART_SetGuardTime</strong> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[12e]"></a>USART_SmartCardCmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[12f]"></a>USART_SmartCardNACKCmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[130]"></a>USART_IrDAConfig</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[131]"></a>USART_IrDACmd</strong> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[132]"></a>USART_DMACmd</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[80]"></a>USART_ITConfig</strong> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 20</li>

    <li>Call Chain = USART_ITConfig</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>
  </ul>

  <p><strong><a name="[133]"></a>USART_GetFlagStatus</strong> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[7f]"></a>USART_ClearFlag</strong> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init</li>
  </ul>

  <p><strong><a name="[82]"></a>USART_GetITStatus</strong> (Thumb, 118 bytes, Stack size 16 bytes, stm32f4xx_usart.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 16</li>

    <li>Call Chain = USART_GetITStatus</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler</li>
  </ul>

  <p><strong><a name="[134]"></a>USART_ClearITPendingBit</strong> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)</p>

  <p><strong><a name="[64]"></a>delay_init</strong> (Thumb, 52 bytes, Stack size 8 bytes, delay.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = delay_init</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[8a]"></a>delay_us</strong> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte</li>

    <li><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte</li>

    <li><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck</li>

    <li><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack</li>

    <li><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack</li>

    <li><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop</li>

    <li><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start</li>

    <li><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_InitGyro_Offset</li>

    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>

    <li><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_setMode</li>

    <li><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_FIFO_init</li>
  </ul>

  <p><strong><a name="[79]"></a>delay_xms</strong> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms</li>
  </ul>

  <p><strong><a name="[66]"></a>delay_ms</strong> (Thumb, 56 bytes, Stack size 16 bytes, delay.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 16</li>

    <li>Call Chain = delay_ms</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_xms</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_init</li>

    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[135]"></a>_sys_exit</strong> (Thumb, 6 bytes, Stack size 0 bytes, usart.o(.text), UNUSED)</p>

  <p><strong><a name="[60]"></a>fputc</strong> (Thumb, 22 bytes, Stack size 0 bytes, usart.o(.text))<br />
  [Address Reference Count : 1]</p>

  <ul>
    <li>printfa.o(i.__0printf)</li>
  </ul>

  <p><strong><a name="[65]"></a>uart_init</strong> (Thumb, 172 bytes, Stack size 40 bytes, usart.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 108</li>

    <li>Call Chain = uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd</li>

    <li><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd</li>

    <li><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig</li>

    <li><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init</li>

    <li><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init</li>

    <li><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag</li>

    <li><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig</li>

    <li><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd</li>

    <li><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[30]"></a>USART1_IRQHandler</strong> (Thumb, 122 bytes, Stack size 8 bytes, usart.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 24</li>

    <li>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus</li>

    <li><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData</li>
  </ul><br />
  [Address Reference Count : 1]

  <ul>
    <li>startup_stm32f40_41xxx.o(RESET)</li>
  </ul>

  <p><strong><a name="[84]"></a>HMC5883_IS_newdata</strong> (Thumb, 22 bytes, Stack size 8 bytes, hmc5883l.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit</li>
  </ul>

  <p><strong><a name="[88]"></a>HMC58X3_newValues</strong> (Thumb, 334 bytes, Stack size 20 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 20</li>

    <li>Call Chain = HMC58X3_newValues</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_getRaw</li>
  </ul>

  <p><strong><a name="[86]"></a>HMC58X3_getRaw</strong> (Thumb, 118 bytes, Stack size 32 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 80</li>

    <li>Call Chain = HMC58X3_getRaw &rArr; IICreadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>

    <li><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_newValues</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_mgetValues</li>

    <li><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_FIFO_init</li>
  </ul>

  <p><strong><a name="[89]"></a>HMC58X3_FIFO_init</strong> (Thumb, 32 bytes, Stack size 16 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 96</li>

    <li>Call Chain = HMC58X3_FIFO_init &rArr; HMC58X3_getRaw &rArr; IICreadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_getRaw</li>

    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5883L_SetUp</li>
  </ul>

  <p><strong><a name="[8b]"></a>HMC58X3_writeReg</strong> (Thumb, 18 bytes, Stack size 16 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 80</li>

    <li>Call Chain = HMC58X3_writeReg &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteByte</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_setDOR</li>

    <li><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_init</li>

    <li><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_setMode</li>

    <li><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_setGain</li>
  </ul>

  <p><strong><a name="[136]"></a>HMC58X3_getlastValues</strong> (Thumb, 22 bytes, Stack size 0 bytes, hmc5883l.o(.text), UNUSED)</p>

  <p><strong><a name="[8d]"></a>HMC58X3_mgetValues</strong> (Thumb, 136 bytes, Stack size 24 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 104</li>

    <li>Call Chain = HMC58X3_mgetValues &rArr; HMC58X3_getRaw &rArr; IICreadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_getRaw</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getValues</li>
  </ul>

  <p><strong><a name="[8e]"></a>HMC58X3_setGain</strong> (Thumb, 24 bytes, Stack size 8 bytes, hmc5883l.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_writeReg</li>
  </ul>

  <p><strong><a name="[8f]"></a>HMC58X3_setMode</strong> (Thumb, 28 bytes, Stack size 8 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = HMC58X3_setMode &rArr; HMC58X3_writeReg &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_writeReg</li>

    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5883L_SetUp</li>

    <li><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_init</li>
  </ul>

  <p><strong><a name="[90]"></a>HMC58X3_init</strong> (Thumb, 84 bytes, Stack size 16 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 104</li>

    <li>Call Chain = HMC58X3_init &rArr; HMC58X3_setMode &rArr; HMC58X3_writeReg &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd</li>

    <li><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init</li>

    <li><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_setMode</li>

    <li><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_writeReg</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5883L_SetUp</li>
  </ul>

  <p><strong><a name="[91]"></a>HMC58X3_setDOR</strong> (Thumb, 24 bytes, Stack size 8 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = HMC58X3_setDOR &rArr; HMC58X3_writeReg &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_writeReg</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5883L_SetUp</li>
  </ul>

  <p><strong><a name="[92]"></a>HMC58X3_getID</strong> (Thumb, 36 bytes, Stack size 8 bytes, hmc5883l.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadOneByte</li>
  </ul>

  <p><strong><a name="[94]"></a>HMC5883L_SetUp</strong> (Thumb, 26 bytes, Stack size 8 bytes, hmc5883l.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 112</li>

    <li>Call Chain = HMC5883L_SetUp &rArr; HMC58X3_init &rArr; HMC58X3_setMode &rArr; HMC58X3_writeReg &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_setDOR</li>

    <li><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_init</li>

    <li><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_setMode</li>

    <li><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_FIFO_init</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_init</li>
  </ul>

  <p><strong><a name="[137]"></a>HMC5883L_Start_Calib</strong> (Thumb, 34 bytes, Stack size 0 bytes, hmc5883l.o(.text), UNUSED)</p>

  <p><strong><a name="[9b]"></a>invSqrt</strong> (Thumb, 80 bytes, Stack size 12 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 12</li>

    <li>Call Chain = invSqrt</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeIMU_AHRSupdate</li>

    <li><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRSupdate</li>
  </ul>

  <p><strong><a name="[69]"></a>IMU_init</strong> (Thumb, 182 bytes, Stack size 8 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 160</li>

    <li>Call Chain = IMU_init &rArr; MPU6050_initialize &rArr; MPU6050_setFullScaleAccelRange &rArr; IICwriteBits &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms</li>

    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>

    <li><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC5883L_SetUp</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[96]"></a>IMU_getValues</strong> (Thumb, 182 bytes, Stack size 32 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 136</li>

    <li>Call Chain = IMU_getValues &rArr; HMC58X3_mgetValues &rArr; HMC58X3_getRaw &rArr; IICreadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getMotion6</li>

    <li><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_mgetValues</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getQ</li>
  </ul>

  <p><strong><a name="[98]"></a>IMU_AHRSupdate</strong> (Thumb, 2062 bytes, Stack size 184 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 256</li>

    <li>Call Chain = IMU_AHRSupdate &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d</li>

    <li><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt</li>

    <li><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f</li>

    <li><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getQ</li>
  </ul>

  <p><strong><a name="[9c]"></a>FreeIMU_AHRSupdate</strong> (Thumb, 1520 bytes, Stack size 144 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 232</li>

    <li>Call Chain = FreeIMU_AHRSupdate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f</li>

    <li><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getQ</li>
  </ul>

  <p><strong><a name="[9f]"></a>IMU_getQ</strong> (Thumb, 362 bytes, Stack size 24 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 280</li>

    <li>Call Chain = IMU_getQ &rArr; IMU_AHRSupdate &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeIMU_AHRSupdate</li>

    <li><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRSupdate</li>

    <li><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getValues</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>
  </ul>

  <p><strong><a name="[a0]"></a>safe_asin</strong> (Thumb, 122 bytes, Stack size 32 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 232</li>

    <li>Call Chain = safe_asin &rArr; __hardfp_asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>
  </ul>

  <p><strong><a name="[6b]"></a>IMU_getYawPitchRoll</strong> (Thumb, 492 bytes, Stack size 56 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 336</li>

    <li>Call Chain = IMU_getYawPitchRoll &rArr; IMU_getQ &rArr; IMU_AHRSupdate &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d</li>

    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f</li>

    <li><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_asin</li>

    <li><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getQ</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[6a]"></a>Initialize_Q</strong> (Thumb, 2696 bytes, Stack size 112 bytes, imu.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 408</li>

    <li>Call Chain = Initialize_Q &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d</li>

    <li><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin</li>

    <li><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos</li>

    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>

    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f</li>

    <li><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getValues</li>

    <li><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invSqrt</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[a9]"></a>Math_Constrain</strong> (Thumb, 16 bytes, Stack size 0 bytes, fmath.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_newValues</li>
  </ul>

  <p><strong><a name="[138]"></a>Math_fConstrain</strong> (Thumb, 32 bytes, Stack size 0 bytes, fmath.o(.text), UNUSED)</p>

  <p><strong><a name="[139]"></a>Math_abs</strong> (Thumb, 18 bytes, Stack size 0 bytes, fmath.o(.text), UNUSED)</p>

  <p><strong><a name="[13a]"></a>Math_min</strong> (Thumb, 14 bytes, Stack size 0 bytes, fmath.o(.text), UNUSED)</p>

  <p><strong><a name="[13b]"></a>Math_max</strong> (Thumb, 14 bytes, Stack size 0 bytes, fmath.o(.text), UNUSED)</p>

  <p><strong><a name="[13c]"></a>Get_Yaw_Error</strong> (Thumb, 78 bytes, Stack size 0 bytes, fmath.o(.text), UNUSED)</p>

  <p><strong><a name="[aa]"></a>MPU6050_getAvg</strong> (Thumb, 30 bytes, Stack size 8 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = MPU6050_getAvg</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_newValues</li>
  </ul>

  <p><strong><a name="[a8]"></a>MPU6050_newValues</strong> (Thumb, 384 bytes, Stack size 32 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 40</li>

    <li>Call Chain = MPU6050_newValues &rArr; MPU6050_getAvg</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getAvg</li>

    <li><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Math_Constrain</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getMotion6</li>
  </ul>

  <p><strong><a name="[ab]"></a>MPU6050_setClockSource</strong> (Thumb, 20 bytes, Stack size 16 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 112</li>

    <li>Call Chain = MPU6050_setClockSource &rArr; IICwriteBits &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[ad]"></a>MPU6050_setFullScaleGyroRange</strong> (Thumb, 20 bytes, Stack size 16 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 112</li>

    <li>Call Chain = MPU6050_setFullScaleGyroRange &rArr; IICwriteBits &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[ae]"></a>MPU6050_setFullScaleAccelRange</strong> (Thumb, 20 bytes, Stack size 16 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 112</li>

    <li>Call Chain = MPU6050_setFullScaleAccelRange &rArr; IICwriteBits &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[af]"></a>MPU6050_setSleepEnabled</strong> (Thumb, 18 bytes, Stack size 8 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 96</li>

    <li>Call Chain = MPU6050_setSleepEnabled &rArr; IICwriteBit &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[b1]"></a>MPU6050_getDeviceID</strong> (Thumb, 20 bytes, Stack size 8 bytes, mpu6050.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_testConnection</li>
  </ul>

  <p><strong><a name="[b2]"></a>MPU6050_testConnection</strong> (Thumb, 18 bytes, Stack size 8 bytes, mpu6050.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getDeviceID</li>
  </ul>

  <p><strong><a name="[b3]"></a>MPU6050_setI2CMasterModeEnabled</strong> (Thumb, 18 bytes, Stack size 8 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 96</li>

    <li>Call Chain = MPU6050_setI2CMasterModeEnabled &rArr; IICwriteBit &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[b4]"></a>MPU6050_setI2CBypassEnabled</strong> (Thumb, 18 bytes, Stack size 8 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 96</li>

    <li>Call Chain = MPU6050_setI2CBypassEnabled &rArr; IICwriteBit &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[b5]"></a>MPU6050_is_DRY</strong> (Thumb, 22 bytes, Stack size 8 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = MPU6050_is_DRY</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getMotion6</li>
  </ul>

  <p><strong><a name="[97]"></a>MPU6050_getMotion6</strong> (Thumb, 340 bytes, Stack size 40 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = MPU6050_getMotion6 &rArr; IICreadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_is_DRY</li>

    <li><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_newValues</li>

    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_InitGyro_Offset</li>

    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>

    <li><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getValues</li>
  </ul>

  <p><strong><a name="[95]"></a>MPU6050_initialize</strong> (Thumb, 268 bytes, Stack size 40 bytes, mpu6050.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 152</li>

    <li>Call Chain = MPU6050_initialize &rArr; MPU6050_setFullScaleAccelRange &rArr; IICwriteBits &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd</li>

    <li><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init</li>

    <li><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits</li>

    <li><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit</li>

    <li><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setI2CBypassEnabled</li>

    <li><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setI2CMasterModeEnabled</li>

    <li><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setSleepEnabled</li>

    <li><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleAccelRange</li>

    <li><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleGyroRange</li>

    <li><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setClockSource</li>

    <li><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getMotion6</li>

    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_init</li>
  </ul>

  <p><strong><a name="[13d]"></a>MPU6050_getlastMotion6</strong> (Thumb, 76 bytes, Stack size 20 bytes, mpu6050.o(.text), UNUSED)</p>

  <p><strong><a name="[b6]"></a>MPU6050_InitGyro_Offset</strong> (Thumb, 190 bytes, Stack size 56 bytes, mpu6050.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getMotion6</li>

    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul>

  <p><strong><a name="[67]"></a>IIC_Init</strong> (Thumb, 46 bytes, Stack size 16 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 36</li>

    <li>Call Chain = IIC_Init &rArr; GPIO_Init</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd</li>

    <li><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[b7]"></a>IIC_Start</strong> (Thumb, 64 bytes, Stack size 8 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = IIC_Start</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBytes</li>

    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>

    <li><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadOneByte</li>
  </ul>

  <p><strong><a name="[b8]"></a>IIC_Stop</strong> (Thumb, 66 bytes, Stack size 8 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = IIC_Stop</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBytes</li>

    <li><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack</li>

    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>

    <li><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadOneByte</li>
  </ul>

  <p><strong><a name="[b9]"></a>IIC_Wait_Ack</strong> (Thumb, 100 bytes, Stack size 8 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 16</li>

    <li>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop</li>

    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBytes</li>

    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>

    <li><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadOneByte</li>
  </ul>

  <p><strong><a name="[ba]"></a>IIC_Ack</strong> (Thumb, 68 bytes, Stack size 8 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = IIC_Ack</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte</li>
  </ul>

  <p><strong><a name="[bb]"></a>IIC_NAck</strong> (Thumb, 66 bytes, Stack size 8 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte</li>
  </ul>

  <p><strong><a name="[bc]"></a>IIC_Send_Byte</strong> (Thumb, 90 bytes, Stack size 16 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 16</li>

    <li>Call Chain = IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBytes</li>

    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>

    <li><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadOneByte</li>
  </ul>

  <p><strong><a name="[bd]"></a>IIC_Read_Byte</strong> (Thumb, 96 bytes, Stack size 16 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 24</li>

    <li>Call Chain = IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck</li>

    <li><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack</li>

    <li><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadBytes</li>

    <li><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadOneByte</li>
  </ul>

  <p><strong><a name="[93]"></a>I2C_ReadOneByte</strong> (Thumb, 70 bytes, Stack size 16 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 40</li>

    <li>Call Chain = I2C_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte</li>

    <li><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte</li>

    <li><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack</li>

    <li><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop</li>

    <li><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadByte</li>

    <li><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_getID</li>
  </ul>

  <p><strong><a name="[87]"></a>IICreadBytes</strong> (Thumb, 100 bytes, Stack size 24 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 48</li>

    <li>Call Chain = IICreadBytes &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte</li>

    <li><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte</li>

    <li><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack</li>

    <li><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop</li>

    <li><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getDeviceID</li>

    <li><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_getMotion6</li>

    <li><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_getRaw</li>
  </ul>

  <p><strong><a name="[be]"></a>IICwriteBytes</strong> (Thumb, 70 bytes, Stack size 24 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 40</li>

    <li>Call Chain = IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte</li>

    <li><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack</li>

    <li><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop</li>

    <li><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteByte</li>
  </ul>

  <p><strong><a name="[bf]"></a>IICreadByte</strong> (Thumb, 22 bytes, Stack size 16 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 56</li>

    <li>Call Chain = IICreadByte &rArr; I2C_ReadOneByte &rArr; IIC_Read_Byte &rArr; IIC_NAck</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadOneByte</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits</li>

    <li><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit</li>
  </ul>

  <p><strong><a name="[8c]"></a>IICwriteByte</strong> (Thumb, 20 bytes, Stack size 24 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 64</li>

    <li>Call Chain = IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBytes</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits</li>

    <li><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit</li>

    <li><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HMC58X3_writeReg</li>
  </ul>

  <p><strong><a name="[ac]"></a>IICwriteBits</strong> (Thumb, 106 bytes, Stack size 32 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 96</li>

    <li>Call Chain = IICwriteBits &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadByte</li>

    <li><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteByte</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleAccelRange</li>

    <li><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleGyroRange</li>

    <li><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setClockSource</li>

    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[b0]"></a>IICwriteBit</strong> (Thumb, 80 bytes, Stack size 24 bytes, ioi2c.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = IICwriteBit &rArr; IICwriteByte &rArr; IICwriteBytes &rArr; IIC_Send_Byte</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICreadByte</li>

    <li><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteByte</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setI2CBypassEnabled</li>

    <li><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setI2CMasterModeEnabled</li>

    <li><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setSleepEnabled</li>

    <li><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_initialize</li>
  </ul>

  <p><strong><a name="[9e]"></a>__aeabi_dadd</strong> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr</li>

    <li><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl</li>

    <li><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round</li>

    <li><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin</li>

    <li><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos</li>

    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>

    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeIMU_AHRSupdate</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>

    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>

    <li><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly</li>

    <li><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits</li>
  </ul>

  <p><strong><a name="[a7]"></a>__aeabi_dsub</strong> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>

    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>

    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>

    <li><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos</li>
  </ul>

  <p><strong><a name="[c4]"></a>__aeabi_drsub</strong> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>

    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>

    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>

    <li><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos</li>
  </ul>

  <p><strong><a name="[9d]"></a>__aeabi_dmul</strong> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 88</li>

    <li>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>

    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeIMU_AHRSupdate</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>

    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>

    <li><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly</li>

    <li><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow</li>

    <li><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos</li>

    <li><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits</li>
  </ul>

  <p><strong><a name="[a3]"></a>__aeabi_ddiv</strong> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 40</li>

    <li>Call Chain = __aeabi_ddiv &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>

    <li><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin</li>

    <li><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos</li>

    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>

    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits</li>
  </ul>

  <p><strong><a name="[6c]"></a>__aeabi_f2d</strong> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>

    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>

    <li><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_asin</li>

    <li><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeIMU_AHRSupdate</li>

    <li><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRSupdate</li>
  </ul>

  <p><strong><a name="[9a]"></a>__aeabi_d2f</strong> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = __aeabi_d2f</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>

    <li><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_asin</li>

    <li><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeIMU_AHRSupdate</li>

    <li><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRSupdate</li>
  </ul>

  <p><strong><a name="[13e]"></a>__aeabi_uidiv</strong> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)</p>

  <p><strong><a name="[de]"></a>__aeabi_uidivmod</strong> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core</li>
  </ul>

  <p><strong><a name="[c6]"></a>__aeabi_uldivmod</strong> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr</li>

    <li><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core</li>

    <li><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits</li>
  </ul>

  <p><strong><a name="[c0]"></a>__aeabi_llsl</strong> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod</li>

    <li><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue</li>

    <li><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz</li>
  </ul>

  <p><strong><a name="[13f]"></a>_ll_shift_l</strong> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)</p>

  <p><strong><a name="[c1]"></a>__aeabi_lasr</strong> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>
  </ul>

  <p><strong><a name="[140]"></a>_ll_sshift_r</strong> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)</p>

  <p><strong><a name="[141]"></a>__I$use$fp</strong> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)</p>

  <p><strong><a name="[c5]"></a>_float_round</strong> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f</li>
  </ul>

  <p><strong><a name="[142]"></a>_float_epilogue</strong> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)</p>

  <p><strong><a name="[c3]"></a>_double_round</strong> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = _double_round</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt</li>

    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue</li>
  </ul>

  <p><strong><a name="[c2]"></a>_double_epilogue</strong> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 40</li>

    <li>Call Chain = _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr</li>

    <li><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl</li>

    <li><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d</li>

    <li><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d</li>
  </ul>

  <p><strong><a name="[c8]"></a>_dsqrt</strong> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 40</li>

    <li>Call Chain = _dsqrt &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr</li>

    <li><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt</li>

    <li><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt</li>
  </ul>

  <p><strong><a name="[c9]"></a>__aeabi_d2ulz</strong> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr</li>

    <li><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits</li>
  </ul>

  <p><strong><a name="[db]"></a>__aeabi_cdrcmple</strong> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits</li>
  </ul>

  <p><strong><a name="[62]"></a>__scatterload</strong> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload</li>
  </ul>

  <p><strong><a name="[143]"></a>__scatterload_rt2</strong> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)</p>

  <p><strong><a name="[c7]"></a>__aeabi_llsr</strong> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt</li>

    <li><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod</li>

    <li><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz</li>

    <li><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue</li>

    <li><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz</li>
  </ul>

  <p><strong><a name="[144]"></a>_ll_ushift_r</strong> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)</p>

  <p><strong><a name="[cb]"></a>__aeabi_i2d</strong> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 56</li>

    <li>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>
  </ul>

  <p><strong><a name="[cc]"></a>__aeabi_ui2d</strong> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 56</li>

    <li>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>
  </ul>

  <p><strong><a name="[cd]"></a>__aeabi_d2iz</strong> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 16</li>

    <li>Call Chain = __aeabi_d2iz</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>

    <li><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos</li>
  </ul>

  <p><strong><a name="[ce]"></a>__0printf</strong> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core</li>
  </ul>

  <p><strong><a name="[145]"></a>__1printf</strong> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)</p>

  <p><strong><a name="[6d]"></a>__2printf</strong> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 24</li>

    <li>Call Chain = __2printf</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
  </ul>

  <p><strong><a name="[146]"></a>__c89printf</strong> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)</p>

  <p><strong><a name="[147]"></a>printf</strong> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)</p>

  <p><strong><a name="[d1]"></a>__ARM_fpclassify</strong> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = __ARM_fpclassify</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>
  </ul>

  <p><strong><a name="[a1]"></a>__hardfp_asin</strong> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 200</li>

    <li>Call Chain = __hardfp_asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt</li>

    <li><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno</li>

    <li><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly</li>

    <li><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify</li>

    <li><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs</li>

    <li><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safe_asin</li>
  </ul>

  <p><strong><a name="[a4]"></a>__hardfp_atan</strong> (Thumb, 632 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 160</li>

    <li>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly</li>

    <li><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify</li>

    <li><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs</li>

    <li><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan</li>
  </ul>

  <p><strong><a name="[a2]"></a>__hardfp_atan2</strong> (Thumb, 426 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 216</li>

    <li>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan</li>

    <li><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>

    <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_getYawPitchRoll</li>
  </ul>

  <p><strong><a name="[a6]"></a>__hardfp_cos</strong> (Thumb, 200 bytes, Stack size 40 bytes, cos.o(i.__hardfp_cos))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 296</li>

    <li>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>

    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>

    <li><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>
  </ul>

  <p><strong><a name="[a5]"></a>__hardfp_sin</strong> (Thumb, 200 bytes, Stack size 40 bytes, sin.o(i.__hardfp_sin))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 296</li>

    <li>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>

    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>

    <li><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Q</li>
  </ul>

  <p><strong><a name="[99]"></a>__hardfp_sqrt</strong> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 72</li>

    <li>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt</li>

    <li><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRSupdate</li>
  </ul>

  <p><strong><a name="[d7]"></a>__ieee754_rem_pio2</strong> (Thumb, 938 bytes, Stack size 168 bytes, rred.o(i.__ieee754_rem_pio2))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 256</li>

    <li>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d</li>

    <li><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d</li>

    <li><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs</li>

    <li><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin</li>

    <li><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos</li>
  </ul>

  <p><strong><a name="[d9]"></a>__kernel_cos</strong> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 176</li>

    <li>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly</li>

    <li><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin</li>

    <li><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos</li>
  </ul>

  <p><strong><a name="[d3]"></a>__kernel_poly</strong> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 112</li>

    <li>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>

    <li><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos</li>
  </ul>

  <p><strong><a name="[d8]"></a>__kernel_sin</strong> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 184</li>

    <li>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub</li>

    <li><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub</li>

    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly</li>

    <li><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify</li>

    <li><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin</li>

    <li><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos</li>
  </ul>

  <p><strong><a name="[d2]"></a>__mathlib_dbl_underflow</strong> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 96</li>

    <li>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin</li>
  </ul>

  <p><strong><a name="[148]"></a>__scatterload_copy</strong> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)</p>

  <p><strong><a name="[149]"></a>__scatterload_null</strong> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)</p>

  <p><strong><a name="[14a]"></a>__scatterload_zeroinit</strong> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)</p>

  <p><strong><a name="[d0]"></a>__set_errno</strong> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt</li>

    <li><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt</li>

    <li><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin</li>

    <li><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>
  </ul>

  <p><strong><a name="[d6]"></a>atan</strong> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 168</li>

    <li>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>
  </ul>

  <p><strong><a name="[d4]"></a>fabs</strong> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 8</li>

    <li>Call Chain = fabs</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2</li>

    <li><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan</li>

    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>

    <li><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2</li>
  </ul>

  <p><strong><a name="[d5]"></a>sqrt</strong> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 72</li>

    <li>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round</li>
  </ul><br />
  [Calls]

  <ul>
    <li><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt</li>

    <li><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin</li>
  </ul>

  <h3>Local Symbols</h3>

  <p><strong><a name="[6e]"></a>SetSysClock</strong> (Thumb, 220 bytes, Stack size 12 bytes, system_stm32f4xx.o(.text))<br />
  <br />
  [Stack]</p>

  <ul>
    <li>Max Depth = 12</li>

    <li>Call Chain = SetSysClock</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit</li>
  </ul>

  <p><strong><a name="[da]"></a>_fp_digits</strong> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul</li>

    <li><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv</li>

    <li><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd</li>

    <li><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod</li>

    <li><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz</li>

    <li><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core</li>
  </ul>

  <p><strong><a name="[cf]"></a>_printf_core</strong> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)<br />
  <br />
  [Calls]</p>

  <ul>
    <li><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod</li>

    <li><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod</li>

    <li><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding</li>

    <li><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding</li>

    <li><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits</li>
  </ul><br />
  [Called By]

  <ul>
    <li><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf</li>
  </ul>

  <p><strong><a name="[dd]"></a>_printf_post_padding</strong> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core</li>
  </ul>

  <p><strong><a name="[dc]"></a>_printf_pre_padding</strong> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)<br />
  <br />
  [Called By]</p>

  <ul>
    <li><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core</li>
  </ul>

  <h3>Undefined Global Symbols</h3>
  <hr />
</body>
</html>
